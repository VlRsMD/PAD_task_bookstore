version: '3'

networks:
  my-network:
    driver: bridge

services:
  redis-node1:
    image: redis:latest
    volumes:
      - ./cluster-test/7000/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    ports:
      - "7000:7000"
    networks:
      - my-network
    environment:
      - REDIS_HOST1=redis-node1

  redis-node2:
    image: redis:latest
    volumes:
      - ./cluster-test/7001/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    ports:
      - "7001:7001"
    networks:
      - my-network
    environment:
      - REDIS_HOST2=redis-node2

  redis-node3:
    image: redis:latest
    volumes:
      - ./cluster-test/7002/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    ports:
      - "7002:7002"
    networks:
      - my-network
    environment:
      - REDIS_HOST3=redis-node3

  redis-node4:
    image: redis:latest
    volumes:
      - ./cluster-test/7003/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    ports:
      - "7003:7003"
    networks:
      - my-network
    environment:
      - REDIS_HOST4=redis-node4

  redis-node5:
    image: redis:latest
    volumes:
      - ./cluster-test/7004/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    ports:
      - "7004:7004"
    networks:
      - my-network
    environment:
      - REDIS_HOST5=redis-node5

  redis-node6:
    image: redis:latest
    volumes:
      - ./cluster-test/7005/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    ports:
      - "7005:7005"
    networks:
      - my-network
    environment:
      - REDIS_HOST6=redis-node6

  redis-cluster-init:
    image: redis:latest
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
      - redis-node4
      - redis-node5
      - redis-node6
    networks:
      - my-network
    command: >
      sh -c "sleep 10 && yes yes | redis-cli --cluster create redis-node1:7000 redis-node2:7001 redis-node3:7002 redis-node4:7003 redis-node5:7004 redis-node6:7005 --cluster-replicas 1"
    environment:
      - REDIS_HOST1=redis-node1
      - REDIS_HOST2=redis-node2
      - REDIS_HOST3=redis-node3
      - REDIS_HOST4=redis-node4
      - REDIS_HOST5=redis-node5
      - REDIS_HOST6=redis-node6

  bookstore-service:
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
      - redis-node4
      - redis-node5
      - redis-node6
      - redis-cluster-init
    build:
      context: .
      dockerfile: Dockerfile-service
    ports:
      - "5050:5050"
    networks:
      - my-network
    environment:
      - REDIS_NODES=redis-node1:7000,redis-node2:7001,redis-node3:7002,redis-node4:7003,redis-node5:7004,redis-node6:7005

  replication:
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
      - redis-node4
      - redis-node5
      - redis-node6
      - redis-cluster-init
    build:
      context: .
      dockerfile: Dockerfile-replication
    ports:
      - "5071:5071"
      - "5072:5072"
      - "5073:5073"
      - "5074:5074"
    networks:
      - my-network
    environment:
      - REDIS_NODES=redis-node1:7000,redis-node2:7001,redis-node3:7002,redis-node4:7003,redis-node5:7004,redis-node6:7005